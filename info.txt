==================== Basic Commands ==========================================================

ls                   : list directory                       ls .
dir                  : list directory (windows)             dir .
touch                : create or modify files               cat greetings.py
cat                  : display content of a text file       cat greetings.py
mkdir                : make directory (folder)              mkdir python-demo
rmdir                : remove directory (folder)            rmdir python-demo
mv                   : rename or move files / directory     mv main.py greetings.py
rename               : rename file / directory (windows)    rename main.py greetings.py
rm                   : remove file / directory              rm greetings.py
del                  : remove file(windows)                 del greetings.py\
cp                   : copy file / folder                   cp greetings.py main.py
copy                 : copy file (windows)                  copy greetings.py main.py
clear                : clear the screen(git bash)           clear
cls                  : clear screen (cmd)                   cls
cd                   : change directory                     cd Desktop/python-demo

==================== Directory Structure ====================================================

root directory      / (unix)       C:\ (windows) mostly
home directory      ~              C:\Users\(username)
current directory   .
parent directory    ..


==================== Data types =============================================================

Numeric datatype: (int, float)
    int: Numbers without decimal part                   5
    float: Numbers with decimal part                    2.3

Strings:
    characters                                          'Hello'
                                                        "Hello"
                                                        '''multiline declaration'''
                                                        """multiline declaration"""
Collections:
    list:
        collection of items                                 [1, 2, 'one', 'hello']

    tuple:
        closed collection of items(unmodifyable list)       (1, 2, 'one', 'hello')

    set:
        distinct collection of items                        {1, 2, 'one', 'hello'}

    dict:
        dictionary: key value pair of items                 {'name': 'Henry', 'One': 1}


======================== Variables =========================================================

Names of items
    number = 2.5
    user = {'username': 'xero', password: 'secret'}

    dont's (even tho its syntactically right)
        number=2.4

Obtaining variable info
    type(variable_name): the variable type                                       type(number)
    dir(variable_type): set of operations on the variable_type                   dir(str)
    help(variable_type): documentation on the variable_type                      help(str)
    help(variable_type.operator): documentation of a specific variable function  help(str.index)

===================== Mathmatical operator  ================================================
+    -     *   /     //    %    **

==================== Relational Operators  =================================================
>     <    <=     >=     !=     ==

==================== Logical Operators =====================================================
and not or

==================== Control Statement =====================================================
if    ,    if    else   ,   if   elif   else
for     while

==================== inbuilt function ======================================================
range                         return a (list) of number                              range(10)     range(2, 10),    range(0, 10, 2)
len                           return length of an item(dict, set, str, list, tuple)  len(L)
chr                           convert a number to character representation           chr(66)
ord                           convert a character to its number representation       ord('A')

==================== datatype conversion ===================================================
str                         convert to string representation                         str(4), str(Flase)
int                         convert to an integer                                    int(True), int('56'), int(34.7)
float                       convert to float                                         float('34.5')
enumerate                   enlist items in tuple pair (index and item)              enumerate(L)
zip                         creates a list of tuple pair items                       zip(L1, L2)
list                        convert generators to list                               list(range(10))
set                         convert generator to a set
tuple    
del                         delete a variable                                        del l, del user['username']